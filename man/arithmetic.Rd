% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binary.r
\docType{methods}
\name{arithmetic}
\alias{*,BaseLinAlg,float32-method}
\alias{*,float32,BaseLinAlg-method}
\alias{*,float32,float32-method}
\alias{+,BaseLinAlg,float32-method}
\alias{+,float32,BaseLinAlg-method}
\alias{+,float32,float32-method}
\alias{-,BaseLinAlg,float32-method}
\alias{-,float32,BaseLinAlg-method}
\alias{-,float32,float32-method}
\alias{/,BaseLinAlg,float32-method}
\alias{/,float32,BaseLinAlg-method}
\alias{/,float32,float32-method}
\alias{<,BaseLinAlg,float32-method}
\alias{<,float32,BaseLinAlg-method}
\alias{<,float32,float32-method}
\alias{<=,BaseLinAlg,float32-method}
\alias{<=,float32,BaseLinAlg-method}
\alias{<=,float32,float32-method}
\alias{==,BaseLinAlg,float32-method}
\alias{==,float32,BaseLinAlg-method}
\alias{==,float32,float32-method}
\alias{>,BaseLinAlg,float32-method}
\alias{>,float32,BaseLinAlg-method}
\alias{>,float32,float32-method}
\alias{>=,BaseLinAlg,float32-method}
\alias{>=,float32,BaseLinAlg-method}
\alias{>=,float32,float32-method}
\alias{^,BaseLinAlg,float32-method}
\alias{^,float32,BaseLinAlg-method}
\alias{^,float32,float32-method}
\alias{arithmetic}
\title{arithmetic}
\usage{
\S4method{+}{float32,float32}(e1, e2)

\S4method{*}{float32,float32}(e1, e2)

\S4method{-}{float32,float32}(e1, e2)

\S4method{/}{float32,float32}(e1, e2)

\S4method{^}{float32,float32}(e1, e2)

\S4method{+}{float32,BaseLinAlg}(e1, e2)

\S4method{*}{float32,BaseLinAlg}(e1, e2)

\S4method{-}{float32,BaseLinAlg}(e1, e2)

\S4method{/}{float32,BaseLinAlg}(e1, e2)

\S4method{^}{float32,BaseLinAlg}(e1, e2)

\S4method{+}{BaseLinAlg,float32}(e1, e2)

\S4method{*}{BaseLinAlg,float32}(e1, e2)

\S4method{-}{BaseLinAlg,float32}(e1, e2)

\S4method{/}{BaseLinAlg,float32}(e1, e2)

\S4method{^}{BaseLinAlg,float32}(e1, e2)

\S4method{<}{float32,float32}(e1, e2)

\S4method{<=}{float32,float32}(e1, e2)

\S4method{==}{float32,float32}(e1, e2)

\S4method{>}{float32,float32}(e1, e2)

\S4method{>=}{float32,float32}(e1, e2)

\S4method{<}{float32,BaseLinAlg}(e1, e2)

\S4method{<=}{float32,BaseLinAlg}(e1, e2)

\S4method{==}{float32,BaseLinAlg}(e1, e2)

\S4method{>}{float32,BaseLinAlg}(e1, e2)

\S4method{>=}{float32,BaseLinAlg}(e1, e2)

\S4method{<}{BaseLinAlg,float32}(e1, e2)

\S4method{<=}{BaseLinAlg,float32}(e1, e2)

\S4method{==}{BaseLinAlg,float32}(e1, e2)

\S4method{>}{BaseLinAlg,float32}(e1, e2)

\S4method{>=}{BaseLinAlg,float32}(e1, e2)
}
\arguments{
\item{e1, e2}{Numeric/float vectors/matrices.}
}
\value{
A matrix of the same type as the highest precision input.
}
\description{
Binary arithmetic numeric/float matrices.
}
\examples{
library(float)

s1 = flrunif(5, 5)
s2 = flrunif(5, 5)
x = matrix(1:25, 5)

s1 + s2 # float

typeof(x) # integer
x + s2 # float

storage.mode(x) = "double"
x + s2 # double

}

